name: AI Team CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: 'ai-team-cluster'
          location: 'asia-northeast1-a'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build image tag
        id: image-tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi
          
      - name: Login to Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-team:${{ steps.image-tag.outputs.tag }}
            gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-team:${{ github.sha }}
            
      - name: Update Kubernetes resources
        run: |
          # 環境変数をKubernetesシークレットとして保存
          kubectl create namespace ai-team --dry-run=client -o yaml | kubectl apply -f -
          
          # ConfigMapを更新
          kubectl create configmap ai-team-config \
            --from-literal=DEPLOYMENT_TIME="$(date)" \
            --from-literal=VERSION="${{ steps.image-tag.outputs.tag }}" \
            --from-literal=COMMIT_SHA="${{ github.sha }}" \
            -n ai-team --dry-run=client -o yaml | kubectl apply -f -
            
          # APIキーシークレットを更新
          kubectl create secret generic ai-team-secrets \
            --from-literal=OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            --from-literal=API_KEY_SECRET="${{ secrets.API_KEY_SECRET }}" \
            -n ai-team --dry-run=client -o yaml | kubectl apply -f -
            
          # Kubernetesマニフェストを適用
          kubectl apply -f kubernetes/namespace.yaml
          kubectl apply -f kubernetes/configmaps/
          kubectl apply -f kubernetes/persistentvolumeclaims/
          kubectl apply -f kubernetes/services/
          kubectl apply -f kubernetes/deployments/
          kubectl apply -f kubernetes/statefulsets/
          kubectl apply -f kubernetes/autoscalers/
          kubectl apply -f kubernetes/ingress/
          kubectl apply -f kubernetes/networkpolicies/
          
          # イメージを更新
          kubectl set image deployment/ai-team-main-app main-app=gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-team:${{ steps.image-tag.outputs.tag }} -n ai-team
          kubectl set image deployment/ai-team-api-server api-server=gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-team:${{ steps.image-tag.outputs.tag }} -n ai-team
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/ai-team-main-app -n ai-team
          kubectl rollout status deployment/ai-team-api-server -n ai-team
          
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        
  update-dashboard:
    name: Update Monitoring Dashboard
    runs-on: ubuntu-latest
    needs: [deploy-gke]
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v3
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          
      - name: Update Monitoring Dashboard
        run: |
          gcloud monitoring dashboards create --config-from-file=gcp/monitoring/dashboard.json 